diff -ruN graphite2-1.3.13.orig/CMakeLists.txt graphite2-1.3.13/CMakeLists.txt
--- graphite2-1.3.13.orig/CMakeLists.txt	2019-07-21 07:17:27.815258100 +0000
+++ graphite2-1.3.13/CMakeLists.txt	2019-07-21 07:17:39.343428500 +0000
@@ -82,10 +82,10 @@
 endif()
 
 add_subdirectory(src)
-add_subdirectory(tests)
-add_subdirectory(doc)
+#add_subdirectory(tests)
+#add_subdirectory(doc)
 if (NOT GRAPHITE2_NFILEFACE)
-    add_subdirectory(gr2fonttest)
+#    add_subdirectory(gr2fonttest)
 endif()
 
 set(version 3.0.1)
diff -ruN graphite2-1.3.13.orig/src/CMakeLists.txt graphite2-1.3.13/src/CMakeLists.txt
--- graphite2-1.3.13.orig/src/CMakeLists.txt	2019-07-21 07:17:27.932943600 +0000
+++ graphite2-1.3.13/src/CMakeLists.txt	2019-07-21 07:23:32.761823200 +0000
@@ -63,45 +63,6 @@
 
 file(GLOB PRIVATE_HEADERS inc/*.h)
 
-add_library(graphite2
-    ${GRAPHITE2_VM_TYPE}_machine.cpp
-    gr_char_info.cpp
-    gr_features.cpp
-    gr_face.cpp
-    gr_font.cpp
-    gr_logging.cpp
-    gr_segment.cpp
-    gr_slot.cpp
-    CmapCache.cpp
-    Code.cpp
-    Collider.cpp
-    Decompressor.cpp
-    Face.cpp
-    FeatureMap.cpp
-    Font.cpp
-    GlyphFace.cpp
-    GlyphCache.cpp
-    Intervals.cpp
-    Justifier.cpp
-    NameTable.cpp
-    Pass.cpp
-    Position.cpp
-    Segment.cpp
-    Silf.cpp
-    Slot.cpp
-    Sparse.cpp
-    TtfUtil.cpp
-    UtfCodec.cpp
-    ${FILEFACE}
-    ${TRACING})
-
-set_target_properties(graphite2 PROPERTIES  PUBLIC_HEADER "${GRAPHITE_HEADERS}"
-                                            SOVERSION ${GRAPHITE_SO_VERSION}
-                                            VERSION ${GRAPHITE_VERSION}
-                                            LT_VERSION_CURRENT ${GRAPHITE_API_CURRENT}
-                                            LT_VERSION_REVISION ${GRAPHITE_API_REVISION}
-                                            LT_VERSION_AGE ${GRAPHITE_API_AGE})
-
 add_library(graphite2_static STATIC
     ${GRAPHITE2_VM_TYPE}_machine.cpp
     gr_char_info.cpp
@@ -143,10 +104,6 @@
                                                   OUTPUT_NAME graphite2)
 
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
-    set_target_properties(graphite2 PROPERTIES
-        COMPILE_FLAGS   "-Wall -Wextra -Wno-unknown-pragmas -Wendif-labels -Wshadow -Wctor-dtor-privacy -Wnon-virtual-dtor -fno-rtti -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden"
-        LINK_FLAGS      "-nodefaultlibs ${GRAPHITE_LINK_FLAGS}"
-        LINKER_LANGUAGE C)
     if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86|i.86")
         add_definitions(-mfpmath=sse -msse2)
     endif()
@@ -167,32 +124,20 @@
         endif ()
     endif()
     include(Graphite)
-    if (BUILD_SHARED_LIBS)
-        nolib_test(stdc++ $<TARGET_SONAME_FILE:graphite2>)
-    endif ()
     set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "")
-    CREATE_LIBTOOL_FILE(graphite2 "/lib${LIB_SUFFIX}")
 endif()
 
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
-    set_target_properties(graphite2 PROPERTIES
-        COMPILE_FLAGS   "-Wall -Wextra -Wno-unknown-pragmas -Wimplicit-fallthrough -Wendif-labels -Wshadow -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -fno-rtti -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -mfpmath=sse -msse2"
-        LINK_FLAGS      "-nodefaultlibs"
-        LINKER_LANGUAGE C)
     target_link_libraries(graphite2 c)
     include(Graphite)
-    nolib_test(stdc++ $<TARGET_SONAME_FILE:graphite2>)
     set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "")
-    CREATE_LIBTOOL_FILE(graphite2 "/lib${LIB_SUFFIX}")
 endif()
 
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
-    set_target_properties(graphite2 PROPERTIES
-        COMPILE_DEFINITIONS "_SCL_SECURE_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;UNICODE;GRAPHITE2_EXPORTING")
     set_target_properties(graphite2_static PROPERTIES 
         COMPILE_DEFINITIONS "_SCL_SECURE_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;UNICODE;GRAPHITE2_STATIC")
 endif()
 
 
-install(TARGETS graphite2 graphite2_static EXPORT graphite2 LIBRARY DESTINATION lib${LIB_SUFFIX} ARCHIVE DESTINATION lib${LIB_SUFFIX} PUBLIC_HEADER DESTINATION include/graphite2 RUNTIME DESTINATION bin)
+install(TARGETS graphite2_static EXPORT graphite2 LIBRARY DESTINATION lib${LIB_SUFFIX} ARCHIVE DESTINATION lib${LIB_SUFFIX} PUBLIC_HEADER DESTINATION include/graphite2 RUNTIME DESTINATION bin)
 install(EXPORT graphite2 DESTINATION share/graphite2 NAMESPACE gr2_)
